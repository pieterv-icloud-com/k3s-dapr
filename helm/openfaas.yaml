apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: openfaas
  namespace: kube-system
spec:
  chart: https://%{KUBERNETES_API}%/static/charts/openfaas-4.3.1.tgz
  targetNamespace: openfaas
  valuesContent: |-
    functionNamespace: openfaas-fn

    async: true

    exposeServices: true
    serviceType: NodePort
    rbac: true
    securityContext: true
    basic_auth: false

    # image pull policy for openfaas components, can change to `IfNotPresent` in offline env
    openfaasImagePullPolicy: "Always"

    gateway:
      image: openfaas/gateway:0.13.6-armhf
      readTimeout : "65s"
      writeTimeout : "65s"
      upstreamTimeout : "60s"  # Must be smaller than read/write_timeout
      replicas: 1
      scaleFromZero: true
      # change the port when creating multiple releases in the same baremetal cluster
      nodePort: 31112
      maxIdleConns: 1024
      maxIdleConnsPerHost: 1024

    faasnetes:
      image: openfaas/faas-netes:0.7.7-armhf
      readTimeout : "60s"
      writeTimeout : "60s"
      imagePullPolicy : "Always"    # Image pull policy for deployed functions
      httpProbe: false              # Setting to true will use HTTP for readiness and liveness (incompatible with Istio < 1.1.5)
      setNonRootUser: false
      readinessProbe:
        initialDelaySeconds: 0
        timeoutSeconds: 1           # Tuned-in to run checks early and quickly to support fast cold-start from zero replicas
        periodSeconds: 1
      livenessProbe:
        initialDelaySeconds: 3
        timeoutSeconds: 1
        periodSeconds: 10

    # replaces faas-netes with openfaas-operator
    operator:
      image: openfaas/openfaas-operator:0.9.6-armhf
      create: true
      # set this to false when creating multiple releases in the same cluster
      # must be true for the first one only
      createCRD: true

    queueWorker:
      image: openfaas/queue-worker:0.7.2-armhf
      ackWait : "60s"
      replicas: 1
      gatewayInvoke: true

    # monitoring and auto-scaling components
    # both components
    prometheus:
      image: prom/prometheus-linux-armv7:v2.10.0
      create: true

    alertmanager:
      image: prom/alertmanager-linux-armv7:v0.17.0
      create: true

    # async provider
    nats:
      image: nats-streaming:0.11.2
      enableMonitoring: false

    # ingress configuration
    ingress:
      enabled: true
      # Used to create Ingress record (should be used with exposeServices: false).
      hosts:
        - host: gateway.openfaas.k3s.local  # Replace with gateway.example.com if public-facing
          serviceName: gateway
          servicePort: 8080
          path: /
        - host: portal.openfaas.k3s.local  # Replace with gateway.example.com if public-facing
          serviceName: gateway-external
          servicePort: 8080
          path: /
      annotations:
        kubernetes.io/ingress.class: traefik
      tls:
        # Secrets must be manually created in the namespace.

    # faas-idler configuration
    faasIdler:
      image: openfaas/faas-idler:0.2.0-armhf
      replicas: 1
      create: true
      inactivityDuration: 15m               # If a function is inactive for 15 minutes, it may be scaled to zero
      reconcileInterval: 1m                 # The interval between each attempt to scale functions to zero
      dryRun: true                          # Set to true to enable the idler to apply changes and scale to zero

    basicAuthPlugin:
      image: openfaas/basic-auth-plugin:0.1.1
      replicas: 0

    nodeSelector: {}

    tolerations: []

    affinity: {}

